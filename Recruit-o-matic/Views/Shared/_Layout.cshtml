<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Recruit-o-Matic</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">

    @*@Styles.Render("~/Content/bootstrap")*@
    <link href="/Content/bootstrap.css" rel="stylesheet">
    <style type="text/css">
      body {
        padding-top: 60px;
        padding-bottom: 40px;
      }
    </style>
    <link href="/Content/bootstrap-responsive.css" rel="stylesheet">
    

</head>

<body>

    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="navbar-inner">
            <div class="container">   
                <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </a>             
                <a class="brand" href="/">Recruit-O-Matic</a>
                <div class="nav-collapse collapse">
                    <ul class="nav">
                        <li class="active"><a href="/">Home</a></li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">Admin <b class="caret"></b></a>
                            <ul class="dropdown-menu">
                                <li><a href="@Url.Action("Index", "Admin")">Portal</a></li>
                                <li><a href="@Url.Action("Create", "Admin")">Create new Position</a></li>                                
                                <li><a href="@Url.Action("Register", "Account")">Create new User</a></li>
                            </ul>
                        </li>
                         
                    </ul>  @if (Request.IsAuthenticated) {
                        
                           
          
        using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { @class = "navbar-form pull-right", id="logoutForm" }))
        {
            @Html.AntiForgeryToken()
            <a class="btn btn-mini" href="javascript:document.getElementById('logoutForm').submit()">Log off</a>
    
        }



                           }                   
                </div>
                <!--/.nav-collapse -->
            </div>
        </div>
    </div>


    <div class="container">

        @RenderBody()

    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/jquery.globalize/globalize.js"></script>
    <script src="~/Scripts/jquery.globalize/cultures/globalize.culture.en-GB.js"></script>
    @RenderSection("scripts", required: false)

    <script type="text/javascript">
        /*!
* Monkey patch for jquery.validate.js to make use of Globalize.js number and date parsing
*/

        $(document).ready(function () {

            //var currentCulture = $("meta[name='accept-language']").prop("content");
            var currentCulture = "en-GB";

            // Set Globalize to the current culture driven by the meta tag (if any)
            if (currentCulture) {
                Globalize.culture(currentCulture);
            }

            //Tell the validator that we want numbers parsed using Globalize.js
            $.validator.methods.number = function (value, element) {
                if (Globalize.parseFloat(value)) {
                    return true;
                }
                return false;
            }

            //Tell the validator that we want dates parsed using Globalize.js
            $.validator.methods.date = function (value, element) {
                if (Globalize.parseDate(value)) {
                    return true;
                }
                return false;
            }

            //Fix the range to use globalized methods
            jQuery.extend(jQuery.validator.methods, {
                range: function (value, element, param) {
                    //Use the Globalization plugin to parse the value
                    var val = Globalize.parseFloat(value);
                    return this.optional(element) || (val >= param[0] && val <= param[1]);
                }
            });

        });

    </script>


</body>
</html>
