@model Recruit_o_matic.ViewModels.Admin.VacancyGridViewModel
<table class="table">
    <caption>Current Published Vacancies</caption>
    <thead>
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Published</th>
            <th>Closing Date</th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model.Vacancies)
        {
                


            <tr>
                <td><span class="badge badge-info">@item.ApplicantCount</span> @item.Id</td>
                <td>@item.Title</td>
                <td>@item.PublishedOn</td>
                <td>@item.ClosingDate.ToShortDateString()
                    @if (item.IsClosingSoon && !item.IsClosed)
                    {

                        <span class="label label-warning">Closing Soon</span>
                    }
                    @if (item.IsClosed)
                    {

                        <span class="label label-important">Closed</span>
                    }
                </td>
                <td>
                    <div class="btn-group">
                        @if (item.IsClosed)
                        {
                            <span class="btn btn-mini btn-info disabled"><i class="icon-edit icon-white"></i>&nbsp;Edit</span>
                        <a class="btn btn-mini btn-danger" href="@Url.Action("Delete", new { id = item.Id })"><i class="icon-trash icon-white"></i>&nbsp;Delete</a>
                        <a class="btn btn-mini btn-success" href="@Url.Action("Details", new { id = item.Id })"><i class="icon-info-sign icon-white"></i>&nbsp;Details</a>

                        if (item.Published)
                        {
                            <span class="btn btn-mini btn-inverse disabled"><i class="icon-pause icon-white"></i>&nbsp;Suspend</span>                             
                        }
                        else
                        {
                            <span class="btn btn-mini disabled"><i class="icon-play"></i>&nbsp;Publish</span>                            
                        }
                        }else {

                        <a class="btn btn-mini btn-info" href="@Url.Action("Edit", new { id = item.Id })"><i class="icon-edit icon-white"></i>&nbsp;Edit</a>
                        <a class="btn btn-mini btn-danger" href="@Url.Action("Delete", new { id = item.Id })"><i class="icon-trash icon-white"></i>&nbsp;Delete</a>
                        <a class="btn btn-mini btn-success" href="@Url.Action("Details", new { id = item.Id })"><i class="icon-info-sign icon-white"></i>&nbsp;Details</a>

                        if (item.Published)
                        {
                            <a class="btn btn-mini btn-inverse" href="@Url.Action("Publish", new { id = item.Id })"><i class="icon-pause icon-white"></i>&nbsp;Suspend</a>                             
                        }
                        else
                        {
                            <a class="btn btn-mini" href="@Url.Action("Publish", new { id = item.Id })"><i class="icon-play"></i>&nbsp;Publish</a>                            
                        }
                            
                        }
                    </div>
                </td>
            </tr>
        }

    </tbody>

    <tfoot>
        <tr>
            <td colspan="6">              
                @RavenDB.Pager(
    Model.Vacancies.PageIndex, 
    Model.Vacancies.TotalPages, 
    x => Url.Action("index", new { page = x })
)
            </td>

        </tr>
    </tfoot>

</table>


